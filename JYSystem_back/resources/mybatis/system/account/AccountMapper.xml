<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jy.repository.system.account.AccountDao">
	<!--  com.jy.entity.system.account.Account -->
    <resultMap id="base" type="BaseAccount">
      <id column="ID" jdbcType="INTEGER" property="accountId"/>
      <!-- <association property="loginLog" column="ID" javaType="LoginLog" select="getLoginLogById" /> -->
      <collection  property="poss"     column="ID" ofType="basePos" select="getPoss"/> 
    </resultMap> 
    <resultMap id="LoginLog" type="LoginLog" ></resultMap>
    <resultMap id="ZNodes" type="com.jy.common.utils.tree.entity.ZNodes"></resultMap>
    <resultMap id="basePos" type="BasePos"></resultMap>
    
    <select id="getPoss"  parameterType="string" resultMap="basePos" >
	  SELECT jbp.* FROM jy_base_account_position jbap 
	  LEFT JOIN jy_base_position jbp
	  ON jbp.id=jbap.posId
	  WHERE jbap.accountId=#{ID}      
	  ORDER BY jbap.posId
    </select>
    
    <!-- 防止密码外泄，取消密码列 -->
    <select id="findauto" resultMap="base" parameterType="BaseUserclasses">
    SELECT t.id,
       		  t.loginName,
       		  t.roleId,
       		  t.name,
       		  t.zuojia,
       		  t.picUrl,
       		  t.email,
       		  t.isValid,
       		  DATE_FORMAT(t.createTime,'%Y-%m-%d') createTime, 
       		  t.updateTime,
       		  t.skin,
       		  t.description,
       		  t.phone,
	          t.userclassesid,
	          t.sex,
	          t.city,
	          t.screen,
	          t.xingquaihao,
			  t.zhiye,
			  t.nianling,
			  t.shengao, 
              t.tizhong,
              t.xingzuo,
              t.gexingqianming,
              t.ziwojieshao,
              t.duifangyaoqiu,
              t.userhandlookwhere,
              t.userlookwhere
       		  FROM jy_base_account t   where t.isValid=1 and t.roleId='11' 
       		  <if test="accountId != null and accountId!=''">
        		and t.id=#{accountId}
      		  </if>
      		  <if test="name != null and name!=''">
        		and (t.loginName LIKE CONCAT('%',#{name},'%')  or t.phone LIKE CONCAT('%',#{name},'%'))
      		  </if>
      		  <if test="canpublishsquare != null and canpublishsquare!=''">
        		and t.canpublishsquare=1
      		  </if>
      		  limit 10
    </select>
  
    <select id="find" resultMap="base" parameterType="BaseAccount">
       SELECT t.id,
       		  t.loginName,
       		  t.zuojia,
       		  t.roleId,
       		  jbr.name as roleName,
       		  t.name,
       		  t.picUrl,
       		  t.email,
       		  t.isValid,
       		  DATE_FORMAT(t.createTime,'%Y-%m-%d') createTime, 
       		  t.updateTime,
       		  t.skin,
       		  t.description,
       		  t.phone,
	          t.userclassesid,
	          c.classesname,
	          t.sex,
	          t.city,
	          t.guoneiguowai,
	          t.screen,
	          t.xingquaihao,
			  t.zhiye,
			  t.nianling,
			  t.shengao, 
              t.tizhong,
              t.xingzuo,
              t.gexingqianming,
              t.userhandlookwhere,
              t.userlookwhere,
              t.ziwojieshao,
              t.duifangyaoqiu,
              t.canpublishsquare,
              t.zizhuhoutai
       		  FROM jy_base_account t  
      LEFT JOIN JY_BASE_ROLE jbr
      ON jbr.id=t.roleId
      left join jy_base_userclasses c on t.userclassesid=c.ids
      WHERE 1=1 
       <if test="loginName != null and loginName!='' ">
        	and t.loginName=#{loginName}
       </if>
       <if test="accountId != null  and accountId!='' ">
        	and t.id=#{accountId}
       </if> 
        <if test="roleId != null  and roleId!='' ">
        	and t.roleId=#{roleId}
       </if> 
       <if test="name != null and name!='' ">
        	and t.name=#{name}
       </if>
    </select> 
    <!--  防止密码外泄，取消密码列 -->
 	<select id="findByPage"  resultMap="base" parameterType="BaseAccount">
      SELECT t.id,
       		  t.loginName,
       		  t.roleId,  
       		  jbr.name as roleName,
       		  t.name,
       		  t.picUrl,
       		  t.email,
       		  t.isValid,
       		  DATE_FORMAT(t.createTime,'%Y-%m-%d') createTime, 
       		  t.updateTime,
       		  t.skin,
       		  t.phone,
	          t.userclassesid,
	          c.classesname,
	          t.sex,
	          t.city,
	          t.screen,
       		  t.description FROM JY_BASE_ACCOUNT t 
      LEFT JOIN JY_BASE_ROLE jbr 
      ON jbr.id=t.roleId left join jy_base_userclasses c on t.userclassesid=c.ids
      WHERE 1=1 
       <if test="param.loginName != null and param.loginName!='' ">			
        	AND t.loginName LIKE CONCAT('%',#{param.loginName},'%')
       </if>
       <if test="param.name != null and param.name!='' ">			
        	AND t.name LIKE CONCAT('%',#{param.name},'%')
       </if>
       <if test="param.phone != null and param.phone!='' ">			
        	AND t.phone LIKE CONCAT('%',#{param.phone},'%')
       </if>
       <if test="param.keyWord!= null and param.keyWord!=''">
        	AND (
        	t.loginName LIKE CONCAT('%',#{param.keyWord},'%')    
        	OR t.name LIKE CONCAT('%',#{param.keyWord},'%')
        	OR t.email LIKE CONCAT('%',#{param.keyWord},'%')
        	)
       </if>
        <if test="param.roleId != null and param.roleId!='' ">
        	AND t.roleId=#{param.roleId}
       </if>  
       <if test="param.isValid != null and param.isValid!='' ">
        	AND t.isValid=#{param.isValid}
       </if>  
       <if test="param.screen != null and param.screen!='' ">
        	AND t.roleId!=11
       </if>
        ORDER BY t.updateTime desc
    </select>  
    <select id="count"  resultType="int" parameterType="BaseAccount">
       SELECT count(1) FROM jy_base_account t  WHERE 1=1 
    </select>        
 	<insert id="insert"  parameterType="BaseAccount">	
 	<![CDATA[
	INSERT INTO jy_base_account(
	loginName,name,password,salt,roleId,skin,email,isValid,createTime,description,phone,userclassesid,sex,city,screen,picUrl,guoneiguowai,
	xingquaihao,zhiye,nianling,shengao,tizhong, xingzuo,gexingqianming,ziwojieshao,userlookwhere,userhandlookwhere,duifangyaoqiu,
	zizhuhoutai,canpublishsquare,imessageids,zuojia
	) VALUES (#{loginName},#{name},#{password},#{salt},#{roleId},#{skin},
	#{email},#{isValid},#{createTime},#{description},#{phone},#{userclassesid},#{sex},#{city},#{screen},#{picUrl},#{guoneiguowai},
	#{xingquaihao},#{zhiye},#{nianling},#{shengao},#{tizhong},#{xingzuo},#{gexingqianming},#{ziwojieshao},
	#{userlookwhere},#{userhandlookwhere},#{duifangyaoqiu},1,#{canpublishsquare},-1,#{zuojia}
	)
	]]>  
	</insert>
	<delete id="delete" parameterType="BaseAccount">
	delete from jy_base_account  
	WHERE id=#{accountId}
	</delete>
	<delete id="deleteBatch" parameterType ="java.util.List">
	DELETE FROM jy_base_account WHERE id in(
		<foreach item="o" collection="list" open="" separator="," close="" >
			#{o.accountId}
		</foreach>
		)
	</delete>
	
	<update id="update" parameterType="BaseAccount">
		UPDATE jy_base_account SET 
		<if test="loginName != null and loginName!=''">
        loginName =#{loginName},
      	</if>
      	<if test="roleId != null and roleId!=''">
        roleId =#{roleId},
      	</if>
      	<if test="isValid != null and isValid!=''">
        isValid =#{isValid},
      	</if>
      	<if test="zuojia != null">
        zuojia =#{zuojia},
      	</if>
      	<if test="email != null">
       email =#{email},
      	</if>
      	<if test="canpublishsquare != null and canpublishsquare!=''">
       canpublishsquare =#{canpublishsquare},
      	</if>
      	<if test="duifangyaoqiu != null">
       duifangyaoqiu =#{duifangyaoqiu},
      	</if>
      	
      	<if test="tizhong != null">
        tizhong = #{tizhong},
      	</if>
      	<if test="shengao != null">
        shengao = #{shengao},
      	</if>
      	<if test="nianling != null">
         nianling = #{nianling},
      	</if>
      	<if test="zhiye != null">
        zhiye = #{zhiye},
      	</if>
      	<if test="xingquaihao != null">
        xingquaihao = #{xingquaihao},
      	</if>
      	<if test="name != null">
       	name =#{name},
      	</if>
		<if test="sex != null and sex!=''">
        sex =#{sex},
      	</if>
      	<if test="userclassesid != null and userclassesid!=''">
        userclassesid =#{userclassesid},
      	</if>
      	<if test="picUrl != null">
        picUrl =#{picUrl},
      	</if>
      	<if test="phone != null">
        phone =#{phone},
      	</if>
      	<if test="description != null">
       description =#{description},
      	</if>
      	<if test="updateTime != null and updateTime !=''">
       updateTime =#{updateTime},
      	</if>
      	<if test="gexingqianming != null">
       gexingqianming=#{gexingqianming},
      	</if>
      	<if test="xingzuo != null">
       xingzuo=#{xingzuo},
      	</if>
      	<if test="screen != null and screen!=''">
       screen =#{screen},
      	</if>
      	<if test="city != null">
       city =#{city},
      	</if>
      	<if test="password != null and password!=''">
       password =#{password},
      	</if>
      	<if test="ziwojieshao != null">
       ziwojieshao =#{ziwojieshao},
      	</if>
      	<if test="userlookwhere != null">
       userlookwhere =#{userlookwhere},
      	</if>
      	<if test="userhandlookwhere != null">
       userhandlookwhere =#{userhandlookwhere},
      	</if>
      	<if test="guoneiguowai != null">
       guoneiguowai =#{guoneiguowai},
      	</if>
      	<if test="zizhuhoutai != null">
        zizhuhoutai =#{zizhuhoutai},
      	</if>
      	
		id=#{accountId}	
		
		WHERE id=#{accountId}
	</update>
    <!-- 这方法能获取密码和盐 -->
    <select id="findFormatByLoginName"  resultMap="base" parameterType="String">
    	<![CDATA[
       SELECT a.* FROM jy_base_account a WHERE 1=1 
       AND a.isvalid='1' 
       AND a.loginname=#{loginName,jdbcType=VARCHAR}
       ]]>  
    </select>
    <!-- 这方法不能能获取密码和盐 -->
    <select id="findAccountById"  resultMap="base" parameterType="String">
       SELECT  t.id,
       		  t.loginName,
       		  t.roleId,
       		  jbr.name as roleName,
       		  t.name,
       		  t.picUrl,
       		  t.email,
       		  t.isValid,
       		  t.createTime,
       		  t.updateTime,
       		  t.skin,
       		  t.description 
       	FROM jy_base_account t 
       	LEFT JOIN JY_BASE_ROLE jbr
        ON jbr.id=t.roleId 
        WHERE t.accountId=#{accountId}
    </select>
   <update id="setSetting" parameterType="BaseAccount">
		UPDATE jy_base_account 
		SET   skin =#{skin}
		WHERE id=#{accountId}
	</update>
	<select id="getPerData" resultMap="base" parameterType="String" >
		   SELECT t.id,
		   	  t.loginName,
       		  t.roleId,
       		  t.picUrl,
       		  t.name,
       		  t.email,   		  
       		  t.createTime,
       		  t.updateTime,
       		  t.description,
       		  jbr.name as roleName
       		  FROM jy_base_account t 
       	   LEFT JOIN  jy_base_role jbr
       	   ON jbr.id=t.roleId
       	   WHERE t.isValid=1 and t.id=#{accountId} 
	</select>
	<update id="setPerData" parameterType="BaseAccount">
		UPDATE jy_base_account 
		SET   name =#{name},
			  email =#{email},
			  updateTime =#{updateTime}
		WHERE id=#{accountId}
	</update>
	<update id="setHeadpic" parameterType="BaseAccount">
		UPDATE jy_base_account 
		SET   picUrl =#{picUrl},
			  updateTime =#{updateTime}
		WHERE id=#{accountId}
	</update>
	<select id="getRoles" resultMap="ZNodes">
		SELECT jbo.id,
			   jbo.pId,
			   jbo.name,
			   'o' as other 
		FROM jy_base_org jbo
		UNION ALL 
		SELECT CONCAT('role',jbr.id) as id,
			   jbr.orgId as pId,
			   jbr.name,
			   'r' as other 
		FROM jy_base_role jbr
	</select>
    <select id="findCountByLoginName" resultType="int">
       SELECT count(1)
       		  FROM jy_base_account t 
       WHERE  t.loginName=#{loginName}
    </select> 
    
     <select id="findCountByPhone" resultType="int">
       SELECT count(1)
       		  FROM jy_base_account t 
       WHERE  t.phone=#{phone}
    </select> 
    
    <select id="findCountByClassesid" resultType="int">
       SELECT count(1) FROM jy_base_account t WHERE  t.userclassesid=#{userclassesid}
    </select> 
    
    <update id="resetPwd" parameterType="BaseAccount">
		UPDATE jy_base_account 
		SET   password =#{password},
			  salt =#{salt}
		WHERE id=#{accountId}
	</update>
	
	<select id="getLoginLogById"  parameterType="string" resultMap="LoginLog">
	SELECT MAX(jbll.loginTime) as loginTime,jbll.loginIP 
	FROM (SELECT t.accountId,t.loginIP,t.loginTime from jy_base_login_log t WHERE t.accountId=#{ID}) jbll
	GROUP BY jbll.accountId
	</select>
	
	<update id="updateimessage" parameterType="BaseAccount">
	UPDATE jy_base_account SET imessageids=CONCAT(imessageids,',',#{imessageids}) 
	where isValid=1 and devicetype is not null and roleId=11
	  <if test="sex != null and sex!=''">
        and sex=#{sex}
       </if>
       
       <if test="userclassesid != null and userclassesid!=''">
        and userclassesid=#{userclassesid}
       </if>
       
       and ( 1=1
        <if test="userlookwhere != null and userlookwhere!=''">
         or (userlookwhere is not null and length(trim(userlookwhere))>0)
      </if>
      
       <if test="userhandlookwhere != null and userhandlookwhere!=''">
        or (userhandlookwhere is not null  and length(trim(userhandlookwhere))>0)
       </if>
       
	 <if test="gnquanbu != null and gnquanbu.size()!=0">
        or (
        	<foreach collection="gnquanbu" item="item" index="index" open="(" separator="or" close=")">
        		userlookwhere like '%${item}%'
        	</foreach>
           )
      </if>
      
       <if test="gwquanbu != null and gwquanbu.size()!=0">
        or (
        	<foreach collection="gwquanbu" item="item" index="index" open="(" separator="or" close=")">
        		userhandlookwhere like '%${item}%'
        	</foreach>
           )
      </if>
      )
	</update>
	
	<select id="getRegionHashMap" resultType="java.util.HashMap" parameterType="BaseAccount">
      select distinct devicetype,id from jy_base_account  where roleId=11 and isValid=1
      
      <if test="sex != null and sex!=''">
        and sex=#{sex}
       </if>
       
       <if test="userclassesid != null and userclassesid!=''">
        and userclassesid=#{userclassesid}
       </if>
       
       and devicetype=#{devicetype}
       
       and ( 1=1
       
        <if test="userlookwhere != null and userlookwhere!=''">
         or (userlookwhere is not null and length(trim(userlookwhere))>0)
      </if>
      
       <if test="userhandlookwhere != null and userhandlookwhere!=''">
        or (userhandlookwhere is not null  and length(trim(userhandlookwhere))>0)
       </if>
       
      <if test="gnquanbu != null and gnquanbu.size()!=0">
        or (
        	<foreach collection="gnquanbu" item="item" index="index" open="(" separator="or" close=")">
        		userlookwhere like '%${item}%'
        	</foreach>
           )
      </if>
      
       <if test="gwquanbu != null and gwquanbu.size()!=0">
        or (
        	<foreach collection="gwquanbu" item="item" index="index" open="(" separator="or" close=")">
        		userhandlookwhere like '%${item}%'
        	</foreach>
           )
      </if>
      )
    </select>
	
</mapper>